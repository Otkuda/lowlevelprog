[IO 1]
[Вариант 9]
[Нахождение биномиальных коэффициентов по треугольнику Паскаля, ответ начинается в 111 ячейке]

[Стандартная инициализация]

[31:] T 120 S
[32:] X 0 S [Для отладки]

[33:] A 108 S
[34:] T 109 S

[35:] A 107 S
[36:] S 100 S
[37:] G 120 S
[38:] T 107 S

[39:] T 0 S [Обнуляем аккумулятор, чтобы не мешал]
[40:] A 110 S
[41:] A 111 S
[42:] T 110 S

[Изменяем команлы 40, 41, 42]

[43:] A 100 S [Добавляем 1 в аккумулятор]
[44:] L 0 L [Двигаем аккумулятор на один разряд влево -> получаем 2 в аккумуляторе]
[45:] A 40 S [Добавляем исходную команду в аккумулятор. Добавляя к комманде 2 увеличиваем на один адрес, к которому команда обращается]
[46:] T 40 S [Сохраняем новую комманду в исходную ячейку]

[47:] A 100 S [Аналогично]
[48:] L 0 L
[49:] A 41 S
[50:] T 41 S

[51:] A 100 S [Аналогично]
[52:] L 0 L
[53:] A 42 S
[54:] T 42 S

[55:] A 109 S [Добавляем переменную tempLen в аккумулятор]
[56:] S 100 S [Вычитаем из нее единицу]
[57:] U 109 S [Перезаписываем новый tempLen не обнуляя аккумулятор]
[58:] E 39 S [Проверяем знак аккумулятора. Если плюс, значит мы не прошли по всему массиву; возвращаемся к 39 команде, если минус - идем дальше]

[59:] A 100 S [Обнулили аккумулятор -1 + 1 = 0, т.к. при попадании в этот шаг аккумулятор всегда равен -1]
[60:] A 108 S [Добавили исходную длину массива]
[61:] A 100 S [Добавили единицу к исходной длине, т.к. она не учитывает последний элемент и без этого увеличения мы не пройдем циклом до последнего элемента]
[62:] T 109 S [Сохранили полученное число в tempLen]

[Двигаем массив k = 0; a(k) - элемент массива с индексом k]

[63:] A 110 S [Добавили a(k) в аккумулятор]
[64:] T 101 S [temp1 = a(k)]
[65:] T 110 S [a(k) = 0]

[66:] T 0 S [В случае цикла, чтобы остатки в аккумаляторе не мешали]
[67:] A 111 S [acc = a(k + 1), так как в этом моменте аккумулятор всегда равен 0]
[68:] T 102 S [temp2 = a(k + 1)]
[69:] A 101 S [acc = temp1 = a(k)]
[70:] T 111 S [a(k + 1) = a(k)]
[71:] A 102 S [acc = temp2 = a(k + 1)]
[72:] T 101 S [temp1 = temp2 = a(k + 1)]

[Изменяем команды 67, 70]

[73:] A 100 S [Аналогичное изменение комманд]
[74:] L 0 L
[75:] A 67 S
[76:] T 67 S

[77:] A 100 S
[78:] L 0 L
[79:] A 70 S
[80:] T 70 S

[81:] A 109 S [Добавляем tempLen в аккумулятор]
[82:] S 100 S [acc -= 1, уменьшили счетчик на 1]
[83:] U 109 S [Перезаписали tempLen без очистки аккумулятора]
[84:] E 66 S [Проверка tempLen >= 0. Да: возвращаемся к 66 комманде; нет: идем дальше]
[85:] T 0 S [обнуляем аккумулятор]

[Возвращаем команды в исходное положение]

[86:] A 103 S [Берем исходную комманду записанную в виде константы]
[87:] T 40 S [Помещаем ее в нужную ячейку]

[88:] A 104 S [Аналогично]
[89:] T 41 S

[90:] A 105 S [Аналогично]
[91:] T 42 S

[92:] A 104 S [Аналогично]
[93:] T 67 S

[94:] A 106 S [Аналогично]
[95:] T 70 S

[96:] A 108 S [Добавляем len в аккумулятор]
[97:] A 100 S [len += 1, т.к после сдвига массива его длина увеличилась на 1]
[98:] T 108 S [Перезаписываем len]
[99:] E 33 S

[Переменные и литералы]

[100:] P 0 L [const1: 1]
[101:] P 0 S [temp1: для временного хранения данных]
[102:] P 0 S [temp2: для врменного хранения данных]

[Комманды, которые восстанавливаем]

[103:] A 110 S [com40]
[104:] A 111 S [com41]
[105:] T 110 S [com42]
[106:] T 111 S [com70]

[Показтель i, задается пользователем]
[107:] P 2 S [i = 4 в этом случае]

[108:] P 0 S [len - Длина начального массива - 2]
[109:] P 0 S [tempLen - Длина для использования в циклах в качестве счетчика]

[Начальный массив "а"]
[110:] P 0 S [a0]
[111:] P 0 L [a1]
[112:] P 0 S
[113:] P 0 S
[114:] P 0 S
[115:] P 0 S
[116:] P 0 S
[117:] P 0 S
[118:] P 0 S
[119:] P 0 S

[120:] Z 0 S [end]
